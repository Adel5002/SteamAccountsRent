services:
  redis:
    image: redis
    restart: unless-stopped
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  dramatiq:
    build: .
    container_name: dramatiq_container
    restart: unless-stopped
    command: [ "dramatiq", "utils.release_account" ]
    depends_on:
      - redis
    environment:
      REDIS_URL: redis://redis:6379

  bot:
    build: .
    container_name: telegram_bot
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_URL: redis://redis:6379
    command: [ "python", "bot/main.py" ]

  web:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      - db
    command: ["uvicorn", "api.endpoints:app", "--host", "0.0.0.0", "--port", "8000"]

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: adel
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: games_rent
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  pgdata:
  redisdata: